package com.flipkart.adq.dao;

import com.flipkart.adq.mapper.DspCmp_Exc_DateMapper;
import com.flipkart.adq.model.DspCmp_Exc_Date;
import com.flipkart.adq.utils.LogSqlFactory;
import com.google.common.base.Optional;
import org.skife.jdbi.v2.sqlobject.Bind;
import org.skife.jdbi.v2.sqlobject.SqlQuery;
import org.skife.jdbi.v2.sqlobject.customizers.RegisterMapper;

import java.util.List;

/**
 * Created by rahul.sachan on 20/01/16.
 */

@LogSqlFactory
@RegisterMapper(DspCmp_Exc_DateMapper.class)
public interface DspCmp_Exc_DateDAO {
    @SqlQuery("select cmpFunData.campaign_id as 'CampaignId',  cmpFunData.exchange_id as 'ExchangeId', reqT.reqs as 'AdRequests', cmpFunData.matched_count as 'MatchedReqs', cmpFunData.uuMatched as 'UUMatched', cmpFunData.filter_passed_count as 'QualifiedReqs', cmpFunData.uuFiltered as 'UUQualified', cmpFunData.bidsPlaced as 'BidsPlaced', cmpFunData.bidsWon as 'BidsWon', cmpFunData.Imps as 'Impressions', cmpFunData.Clks as 'Clicks', cmpFunData.cnvs as 'Conversions' from (select cfunT.created_at as date, cfunT.campaign_id as campaign_id, cfunT.exchange_id as exchange_id, cfunT.matched_count as matched_count, ufunT.unique_users_matched as uuMatched, cfunT.filter_passed_count as filter_passed_count, ufunT.unique_users_filter_passed as uuFiltered, if(reqT is NULL, 0, reqT) as bidsPlaced, if(winT is NULL, 0, winT) as bidsWon, if(impT is NULL, 0, impT) as Imps, if(cliT is NULL, 0, cliT) as Clks, if(cnvT is NULL, 0, cnvT) as Cnvs from adq_bi.campaign_funnel as cfunT left outer join adq_bi.user_campaign_funnel as ufunT on cfunT.created_at = ufunT.created_at and cfunT.campaign_id = ufunT.campaign_id and cfunT.exchange_id = ufunT.exchange_id left outer join  ( select  rpT1.date, rpT1.pubid, rpT1.cmpid,sum(req) as reqT,sum(win) as winT, sum(bcn) as impT, sum(cli) as cliT, sum(cnv) as cnvT  from gjx_reports_m.gjx_rpt_pub_con_plat_cdv_win_stats_dsp as rpT1  where rpT1.date=:date group by rpT1.date, rpT1.pubid, rpT1.cmpid ) rpT on (rpT.pubid=cfunT.exchange_id and rpT.cmpid = cfunT.campaign_id) where cfunT.created_at=:date and cfunT.campaign_id = :cmpid) cmpFunData left outer join ( select sum(req) as reqs, pubid, date  from gjx_reports_m.gjx_rpt_pub_con_dsp where pubid=:affid and date= :date group by pubid ) reqT on cmpFunData.date = :date and cmpFunData.exchange_id = :affid")
    DspCmp_Exc_Date getdspcmp_exc_date(@Bind("cmpid") long cmpid, @Bind("affid") long affid, @Bind("date") String date);

    @SqlQuery("select cmpFunData.campaign_id as 'CampaignId',  cmpFunData.exchange_id as 'ExchangeId', sum(reqT.reqs) as 'AdRequests', sum(cmpFunData.matched_count) as 'MatchedReqs', sum(cmpFunData.uuMatched) as 'UUMatched', sum(cmpFunData.filter_passed_count) as 'QualifiedReqs', sum(cmpFunData.uuFiltered) as 'UUQualified', sum(cmpFunData.bidsPlaced) as BidsPlaced, sum(cmpFunData.bidsWon) as BidsWon, sum(cmpFunData.Imps) as 'Impressions', sum(cmpFunData.Clks) as 'Clicks', sum(cmpFunData.cnvs) as 'Conversions' from (select cfunT.created_at as date, cfunT.campaign_id as campaign_id, cfunT.exchange_id as exchange_id, cfunT.matched_count as matched_count, ufunT.unique_users_matched as uuMatched, cfunT.filter_passed_count as filter_passed_count, ufunT.unique_users_filter_passed as uuFiltered, if(reqT is NULL, 0, reqT) as bidsPlaced, if(winT is NULL, 0, winT) as bidsWon, if(impT is NULL, 0, impT) as Imps, if(cliT is NULL, 0, cliT) as Clks, if(cnvT is NULL, 0, cnvT) as Cnvs from adq_bi.campaign_funnel cfunT left outer join adq_bi.user_campaign_funnel as ufunT on cfunT.created_at = ufunT.created_at and cfunT.campaign_id = ufunT.campaign_id and cfunT.exchange_id = ufunT.exchange_id left outer join  ( select  rpT1.date, rpT1.pubid, rpT1.cmpid,sum(req) as reqT,sum(win) as winT, sum(bcn) as impT, sum(cli) as cliT, sum(cnv) as cnvT  from gjx_reports_m.gjx_rpt_pub_con_plat_cdv_win_stats_dsp as rpT1  where rpT1.date=:date group by rpT1.date, rpT1.pubid, rpT1.cmpid ) rpT on (rpT.pubid=cfunT.exchange_id and rpT.cmpid = cfunT.campaign_id)  where cfunT.created_at=:date and cfunT.campaign_id = :cmpid) cmpFunData left outer join ( select sum(req) as reqs, pubid, date, name  from gjx_reports_m.gjx_rpt_pub_con_dsp join gjx_core_db.ox_affiliates on pubid=affiliateid where date= :date group by pubid) reqT on cmpFunData.date = reqT.date and cmpFunData.exchange_id = reqT.pubid;")
    DspCmp_Exc_Date getdspcmp_date(@Bind("cmpid") long cmpid, @Bind("date") String date);

    @SqlQuery("select cmpFunData.exchange_id as 'ExchangeId',cmpFunData.campaign_id 'CampaignId',reqT.reqs as 'AdRequests', sum(cmpFunData.matched_count) as 'MatchedReqs', sum(cmpFunData.uuMatched) as 'UUMatched', sum(cmpFunData.filter_passed_count) as 'QualifiedReqs', sum(cmpFunData.uuFiltered) as 'UUQualified', sum(cmpFunData.bidsPlaced) as 'BidsPlaced', sum(cmpFunData.bidsWon) as 'BidsWon', sum(cmpFunData.Imps) as 'Impressions', sum(cmpFunData.Clks) as 'Clicks', sum(cmpFunData.cnvs) as 'Conversions' from     (select cfunT.created_at as date, cfunT.campaign_id as campaign_id, cfunT.exchange_id as exchange_id, cfunT.matched_count as matched_count, ufunT.unique_users_matched as uuMatched, cfunT.filter_passed_count as filter_passed_count, ufunT.unique_users_filter_passed as uuFiltered, if(reqT is NULL, 0, reqT) as bidsPlaced, if(winT is NULL, 0, winT) as bidsWon, if(impT is NULL, 0, impT) as Imps, if(cliT is NULL, 0, cliT) as Clks, if(cnvT is NULL, 0, cnvT) as Cnvs  from adq_bi.campaign_funnel cfunT left outer join adq_bi.user_campaign_funnel as ufunT on cfunT.created_at = ufunT.created_at and cfunT.campaign_id = ufunT.campaign_id and cfunT.exchange_id = ufunT.exchange_id   left outer join  (  select  rpT1.date, rpT1.pubid, rpT1.cmpid,sum(req) as reqT,sum(win) as winT, sum(bcn) as impT, sum(cli) as cliT, sum(cnv) as cnvT  from gjx_reports_m.gjx_rpt_pub_con_plat_cdv_win_stats_dsp as rpT1   where rpT1.date= :date group by rpT1.date, rpT1.pubid, rpT1.cmpid           ) rpT on (rpT.pubid=cfunT.exchange_id and rpT.cmpid = cfunT.campaign_id) where cfunT.created_at=:date and cfunT.exchange_id = :affid) cmpFunData left outer join (  select sum(req) as reqs, pubid, date, name  from gjx_reports_m.gjx_rpt_pub_con_dsp join gjx_core_db.ox_affiliates on pubid=affiliateid where date=:date  group by pubid ) reqT on cmpFunData.date = reqT.date and cmpFunData.exchange_id = reqT.pubid;")
    DspCmp_Exc_Date getdspexc_date(@Bind("affid") long affid, @Bind("date") String date);
}
